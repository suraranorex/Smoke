///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Smoke.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Personas recording.
    /// </summary>
    [TestModule("596a8971-6bab-4374-907f-9449fc8fa35f", ModuleType.Recording, 1)]
    public partial class Personas : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Smoke.SmokeRepository repository.
        /// </summary>
        public static global::Smoke.SmokeRepository repo = global::Smoke.SmokeRepository.Instance;

        static Personas instance = new Personas();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Personas()
        {
            Actividad = "PERSONAL ADMINISTRATIVO";
            CantidadVigente = "1";
            SumaAsegurada = "100000";
            TipoDocumento = "D.N.I.";
            NumeroDocumento = "38191893";
            Nombre = "Luis";
            Apellido = "Perez";
            FechaNac = "13/12/1980";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Personas Instance
        {
            get { return instance; }
        }

#region Variables

        string _Actividad;

        /// <summary>
        /// Gets or sets the value of variable Actividad.
        /// </summary>
        [TestVariable("7c820e1a-ae4d-4e73-8129-722bf404fec5")]
        public string Actividad
        {
            get { return _Actividad; }
            set { _Actividad = value; }
        }

        string _CantidadVigente;

        /// <summary>
        /// Gets or sets the value of variable CantidadVigente.
        /// </summary>
        [TestVariable("368370c6-10af-494c-86e3-204ce2a23382")]
        public string CantidadVigente
        {
            get { return _CantidadVigente; }
            set { _CantidadVigente = value; }
        }

        string _SumaAsegurada;

        /// <summary>
        /// Gets or sets the value of variable SumaAsegurada.
        /// </summary>
        [TestVariable("6db5c76f-833b-4215-b07f-697452c30f94")]
        public string SumaAsegurada
        {
            get { return _SumaAsegurada; }
            set { _SumaAsegurada = value; }
        }

        string _TipoDocumento;

        /// <summary>
        /// Gets or sets the value of variable TipoDocumento.
        /// </summary>
        [TestVariable("772c86d6-6b05-460e-8dea-684f3e9a55bb")]
        public string TipoDocumento
        {
            get { return _TipoDocumento; }
            set { _TipoDocumento = value; }
        }

        string _NumeroDocumento;

        /// <summary>
        /// Gets or sets the value of variable NumeroDocumento.
        /// </summary>
        [TestVariable("cd08aa9a-3418-4d84-ac13-3328ed2d2601")]
        public string NumeroDocumento
        {
            get { return _NumeroDocumento; }
            set { _NumeroDocumento = value; }
        }

        string _Nombre;

        /// <summary>
        /// Gets or sets the value of variable Nombre.
        /// </summary>
        [TestVariable("9cd7864e-0ea5-4b3d-ac67-7be2bd7bb700")]
        public string Nombre
        {
            get { return _Nombre; }
            set { _Nombre = value; }
        }

        string _Apellido;

        /// <summary>
        /// Gets or sets the value of variable Apellido.
        /// </summary>
        [TestVariable("96f21f85-d46f-4907-a258-44f121d7f41a")]
        public string Apellido
        {
            get { return _Apellido; }
            set { _Apellido = value; }
        }

        string _FechaNac;

        /// <summary>
        /// Gets or sets the value of variable FechaNac.
        /// </summary>
        [TestVariable("f6300849-d80a-4fe9-a68f-3f5dc598b4cb")]
        public string FechaNac
        {
            get { return _FechaNac; }
            set { _FechaNac = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("179cd022-d834-4b47-98d5-e2a34a6a6fce")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Actividad' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_Actividad'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_ActividadInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_Actividad.PressKeys(Actividad);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_Actividad'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_ActividadInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_ActividadInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CantidadVigente' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigente'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigenteInfo, new RecordItemIndex(3));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigente.PressKeys(CantidadVigente);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigente'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigenteInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigenteInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SumaAsegurada' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAsegurada'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAseguradaInfo, new RecordItemIndex(6));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAsegurada.PressKeys(SumaAsegurada);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAsegurada'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAseguradaInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAseguradaInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(9));
            
            // -------Información Asegurado
            Report.Log(ReportLevel.Info, "Section", "-------Información Asegurado", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_InformacionAsegurado' at Center.", repo.SURA.bttn_InformacionAseguradoInfo, new RecordItemIndex(11));
            repo.SURA.bttn_InformacionAsegurado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_AgregarPersona' at Center.", repo.SURA.bttn_AgregarPersonaInfo, new RecordItemIndex(12));
            repo.SURA.bttn_AgregarPersona.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoDocumento' with focus on 'SURA.txtbox_TipoDeDocumento'.", repo.SURA.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(13));
            repo.SURA.txtbox_TipoDeDocumento.PressKeys(TipoDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(14));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_TipoDeDocumento'", repo.SURA.Copy_of_txtbox_TipoDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(15));
            repo.SURA.Copy_of_txtbox_TipoDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeroDocumento' with focus on 'SURA.txtbox_NumeroDeDocumento'.", repo.SURA.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(16));
            repo.SURA.txtbox_NumeroDeDocumento.PressKeys(NumeroDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(17));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(18));
            repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Nombre' with focus on 'SURA.txt_NombrePersona'.", repo.SURA.txt_NombrePersonaInfo, new RecordItemIndex(19));
            repo.SURA.txt_NombrePersona.PressKeys(Nombre);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.lbl_Detalle' at Center.", repo.SURA.lbl_DetalleInfo, new RecordItemIndex(20));
            repo.SURA.lbl_Detalle.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txt_NombrePersona'", repo.SURA.Copy_of_txt_NombrePersonaInfo, new ActionTimeout(30000), new RecordItemIndex(21));
            repo.SURA.Copy_of_txt_NombrePersonaInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Apellido' with focus on 'SURA.txt_ApellidoPersona'.", repo.SURA.txt_ApellidoPersonaInfo, new RecordItemIndex(22));
            repo.SURA.txt_ApellidoPersona.PressKeys(Apellido);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.lbl_Detalle' at Center.", repo.SURA.lbl_DetalleInfo, new RecordItemIndex(23));
            repo.SURA.lbl_Detalle.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txt_ApellidoPersona'", repo.SURA.Copy_of_txt_ApellidoPersonaInfo, new ActionTimeout(30000), new RecordItemIndex(24));
            repo.SURA.Copy_of_txt_ApellidoPersonaInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FechaNac' with focus on 'SURA.txt_fecha_nac_persona'.", repo.SURA.txt_fecha_nac_personaInfo, new RecordItemIndex(25));
            repo.SURA.txt_fecha_nac_persona.PressKeys(FechaNac);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.lbl_Detalle' at Center.", repo.SURA.lbl_DetalleInfo, new RecordItemIndex(26));
            repo.SURA.lbl_Detalle.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txt_fecha_nac_persona'", repo.SURA.Copy_of_txt_fecha_nac_personaInfo, new ActionTimeout(30000), new RecordItemIndex(27));
            repo.SURA.Copy_of_txt_fecha_nac_personaInfo.WaitForNotExists(30000);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_ValidarDocumento' at Center.", repo.SURA.bttn_ValidarDocumentoInfo, new RecordItemIndex(28));
            //repo.SURA.bttn_ValidarDocumento.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(29));
            //repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(30));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Siguiente' at Center.", repo.SURA.bttn_SiguienteInfo, new RecordItemIndex(31));
            repo.SURA.bttn_Siguiente.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.txt_ComisionesDescuentos'", repo.SURA.txt_ComisionesDescuentosInfo, new ActionTimeout(30000), new RecordItemIndex(32));
            repo.SURA.txt_ComisionesDescuentosInfo.WaitForExists(30000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
